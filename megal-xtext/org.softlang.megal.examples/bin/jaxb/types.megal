/*
 * This module covers the essential type level aspects of Object/XML mapping. In particular,
 * the types in the spaces XMLware and the objectware are pointed as they correspond to each other.
 * We also make explicit the existence of a problem-specific language underlying the involved type-level artifacts. 
 * We think of this language as being abstract in the sense of not fixing it here as being a set of XML trees or object graphs.
 */
model Types 
import Technology
 
xmlTypes : File+
xmlTypes elementOf XmlSchemas

ooTypes : File+
ooTypes elementOf MappableOo

?problemLanguage : Language
 
xmlTypes correspondsTo ooTypes
xmlTypes defines problemLanguage
ooTypes defines problemLanguage