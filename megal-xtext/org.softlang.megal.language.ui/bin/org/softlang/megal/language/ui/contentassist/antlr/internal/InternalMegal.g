/*
* generated by Xtext
*/
grammar InternalMegal;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.softlang.megal.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.softlang.megal.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.softlang.megal.language.services.MegalGrammarAccess;

}

@parser::members {
 
 	private MegalGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MegalGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMegamodel
entryRuleMegamodel 
:
{ before(grammarAccess.getMegamodelRule()); }
	 ruleMegamodel
{ after(grammarAccess.getMegamodelRule()); } 
	 EOF 
;

// Rule Megamodel
ruleMegamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMegamodelAccess().getGroup()); }
(rule__Megamodel__Group__0)
{ after(grammarAccess.getMegamodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixAnnotation
entryRulePrefixAnnotation 
:
{ before(grammarAccess.getPrefixAnnotationRule()); }
	 rulePrefixAnnotation
{ after(grammarAccess.getPrefixAnnotationRule()); } 
	 EOF 
;

// Rule PrefixAnnotation
rulePrefixAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getGroup()); }
(rule__PrefixAnnotation__Group__0)
{ after(grammarAccess.getPrefixAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShowNameAnnotation
entryRuleShowNameAnnotation 
:
{ before(grammarAccess.getShowNameAnnotationRule()); }
	 ruleShowNameAnnotation
{ after(grammarAccess.getShowNameAnnotationRule()); } 
	 EOF 
;

// Rule ShowNameAnnotation
ruleShowNameAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShowNameAnnotationAccess().getGroup()); }
(rule__ShowNameAnnotation__Group__0)
{ after(grammarAccess.getShowNameAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLink
entryRuleLink 
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkAccess().getGroup()); }
(rule__Link__Group__0)
{ after(grammarAccess.getLinkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityType
entryRuleEntityType 
:
{ before(grammarAccess.getEntityTypeRule()); }
	 ruleEntityType
{ after(grammarAccess.getEntityTypeRule()); } 
	 EOF 
;

// Rule EntityType
ruleEntityType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityTypeAccess().getGroup()); }
(rule__EntityType__Group__0)
{ after(grammarAccess.getEntityTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationshipType
entryRuleRelationshipType 
:
{ before(grammarAccess.getRelationshipTypeRule()); }
	 ruleRelationshipType
{ after(grammarAccess.getRelationshipTypeRule()); } 
	 EOF 
;

// Rule RelationshipType
ruleRelationshipType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipTypeAccess().getGroup()); }
(rule__RelationshipType__Group__0)
{ after(grammarAccess.getRelationshipTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getGroup()); }
(rule__Relationship__Group__0)
{ after(grammarAccess.getRelationshipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionApplication
entryRuleFunctionApplication 
:
{ before(grammarAccess.getFunctionApplicationRule()); }
	 ruleFunctionApplication
{ after(grammarAccess.getFunctionApplicationRule()); } 
	 EOF 
;

// Rule FunctionApplication
ruleFunctionApplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionApplicationAccess().getGroup()); }
(rule__FunctionApplication__Group__0)
{ after(grammarAccess.getFunctionApplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
(rule__TypeReference__Alternatives)
{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionTypeReference
entryRuleFunctionTypeReference 
:
{ before(grammarAccess.getFunctionTypeReferenceRule()); }
	 ruleFunctionTypeReference
{ after(grammarAccess.getFunctionTypeReferenceRule()); } 
	 EOF 
;

// Rule FunctionTypeReference
ruleFunctionTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getGroup()); }
(rule__FunctionTypeReference__Group__0)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityTypeReference
entryRuleEntityTypeReference 
:
{ before(grammarAccess.getEntityTypeReferenceRule()); }
	 ruleEntityTypeReference
{ after(grammarAccess.getEntityTypeReferenceRule()); } 
	 EOF 
;

// Rule EntityTypeReference
ruleEntityTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getGroup()); }
(rule__EntityTypeReference__Group__0)
{ after(grammarAccess.getEntityTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQID
entryRuleQID 
:
{ before(grammarAccess.getQIDRule()); }
	 ruleQID
{ after(grammarAccess.getQIDRule()); } 
	 EOF 
;

// Rule QID
ruleQID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQIDAccess().getGroup()); }
(rule__QID__Group__0)
{ after(grammarAccess.getQIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNAME
entryRuleNAME 
:
{ before(grammarAccess.getNAMERule()); }
	 ruleNAME
{ after(grammarAccess.getNAMERule()); } 
	 EOF 
;

// Rule NAME
ruleNAME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNAMEAccess().getGroup()); }
(rule__NAME__Group__0)
{ after(grammarAccess.getNAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleID
entryRuleID 
:
{ before(grammarAccess.getIDRule()); }
	 ruleID
{ after(grammarAccess.getIDRule()); } 
	 EOF 
;

// Rule ID
ruleID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDAccess().getAlternatives()); }
(rule__ID__Alternatives)
{ after(grammarAccess.getIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Megamodel__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getGroup_3_0()); }
(rule__Megamodel__Group_3_0__0)
{ after(grammarAccess.getMegamodelAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getMegamodelAccess().getDeclarationsAssignment_3_1()); }
(rule__Megamodel__DeclarationsAssignment_3_1)
{ after(grammarAccess.getMegamodelAccess().getDeclarationsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getMegamodelAccess().getBindingsAssignment_3_2()); }
(rule__Megamodel__BindingsAssignment_3_2)
{ after(grammarAccess.getMegamodelAccess().getBindingsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEntityTypeParserRuleCall_0()); }
	ruleEntityType
{ after(grammarAccess.getDeclarationAccess().getEntityTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getRelationshipTypeParserRuleCall_1()); }
	ruleRelationshipType
{ after(grammarAccess.getDeclarationAccess().getRelationshipTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_2()); }
	ruleEntity
{ after(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getRelationshipParserRuleCall_3()); }
	ruleRelationship
{ after(grammarAccess.getDeclarationAccess().getRelationshipParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getFunctionApplicationParserRuleCall_4()); }
	ruleFunctionApplication
{ after(grammarAccess.getDeclarationAccess().getFunctionApplicationParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getGroup_3_0()); }
(rule__EntityType__Group_3_0__0)
{ after(grammarAccess.getEntityTypeAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getGroup_3_1()); }
(rule__EntityType__Group_3_1__0)
{ after(grammarAccess.getEntityTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDependentAssignment_1_0()); }
(rule__Entity__DependentAssignment_1_0)
{ after(grammarAccess.getEntityAccess().getDependentAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getParameterAssignment_1_1()); }
(rule__Entity__ParameterAssignment_1_1)
{ after(grammarAccess.getEntityAccess().getParameterAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getFunctionTypeReferenceParserRuleCall_0()); }
	ruleFunctionTypeReference
{ after(grammarAccess.getTypeReferenceAccess().getFunctionTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeReferenceAccess().getEntityTypeReferenceParserRuleCall_1()); }
	ruleEntityTypeReference
{ after(grammarAccess.getTypeReferenceAccess().getEntityTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDAccess().getUCIDTerminalRuleCall_0()); }
	RULE_UCID
{ after(grammarAccess.getIDAccess().getUCIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIDAccess().getLCIDTerminalRuleCall_1()); }
	RULE_LCID
{ after(grammarAccess.getIDAccess().getLCIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Megamodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group__0__Impl
	rule__Megamodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getAnnotationsAssignment_0()); }
(rule__Megamodel__AnnotationsAssignment_0)*
{ after(grammarAccess.getMegamodelAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Megamodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group__1__Impl
	rule__Megamodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getModelKeyword_1()); }

	'model' 

{ after(grammarAccess.getMegamodelAccess().getModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Megamodel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group__2__Impl
	rule__Megamodel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getNameAssignment_2()); }
(rule__Megamodel__NameAssignment_2)
{ after(grammarAccess.getMegamodelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Megamodel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getAlternatives_3()); }
(rule__Megamodel__Alternatives_3)*
{ after(grammarAccess.getMegamodelAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Megamodel__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group_3_0__0__Impl
	rule__Megamodel__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getImportKeyword_3_0_0()); }

	'import' 

{ after(grammarAccess.getMegamodelAccess().getImportKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Megamodel__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Megamodel__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getImportsAssignment_3_0_1()); }
(rule__Megamodel__ImportsAssignment_3_0_1)
{ after(grammarAccess.getMegamodelAccess().getImportsAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixAnnotation__Group__0__Impl
	rule__PrefixAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getPrefixAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixAnnotation__Group__1__Impl
	rule__PrefixAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getKeyAssignment_1()); }
(rule__PrefixAnnotation__KeyAssignment_1)
{ after(grammarAccess.getPrefixAnnotationAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getValueAssignment_2()); }
(rule__PrefixAnnotation__ValueAssignment_2)?
{ after(grammarAccess.getPrefixAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ShowNameAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShowNameAnnotation__Group__0__Impl
	rule__ShowNameAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowNameAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowNameAnnotationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getShowNameAnnotationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShowNameAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShowNameAnnotation__Group__1__Impl
	rule__ShowNameAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowNameAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowNameAnnotationAccess().getValueAssignment_1()); }
(rule__ShowNameAnnotation__ValueAssignment_1)
{ after(grammarAccess.getShowNameAnnotationAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShowNameAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShowNameAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowNameAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowNameAnnotationAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getShowNameAnnotationAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Link__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getAnnotationsAssignment_0()); }
(rule__Link__AnnotationsAssignment_0)*
{ after(grammarAccess.getLinkAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkAssignment_1()); }
(rule__Link__LinkAssignment_1)
{ after(grammarAccess.getLinkAccess().getLinkAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getGroup_2()); }
(rule__Link__Group_2__0)?
{ after(grammarAccess.getLinkAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getLinkAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getToAssignment_4()); }
(rule__Link__ToAssignment_4)
{ after(grammarAccess.getLinkAccess().getToAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Link__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__0__Impl
	rule__Link__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getLinkAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__1__Impl
	rule__Link__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getInputAssignment_2_1()); }
(rule__Link__InputAssignment_2_1)
{ after(grammarAccess.getLinkAccess().getInputAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__2__Impl
	rule__Link__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getLinkAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__3__Impl
	rule__Link__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getVerticalLineKeyword_2_3()); }

	'|' 

{ after(grammarAccess.getLinkAccess().getVerticalLineKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__4__Impl
	rule__Link__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getHyphenMinusGreaterThanSignKeyword_2_4()); }

	'->' 

{ after(grammarAccess.getLinkAccess().getHyphenMinusGreaterThanSignKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getOutputAssignment_2_5()); }
(rule__Link__OutputAssignment_2_5)
{ after(grammarAccess.getLinkAccess().getOutputAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EntityType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__0__Impl
	rule__EntityType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAnnotationsAssignment_0()); }
(rule__EntityType__AnnotationsAssignment_0)*
{ after(grammarAccess.getEntityTypeAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__1__Impl
	rule__EntityType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getNameAssignment_1()); }
(rule__EntityType__NameAssignment_1)
{ after(grammarAccess.getEntityTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__2__Impl
	rule__EntityType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAnnotationsAssignment_2()); }
(rule__EntityType__AnnotationsAssignment_2)?
{ after(grammarAccess.getEntityTypeAccess().getAnnotationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAlternatives_3()); }
(rule__EntityType__Alternatives_3)
{ after(grammarAccess.getEntityTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EntityType__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3_0__0__Impl
	rule__EntityType__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getLessThanSignKeyword_3_0_0()); }

	'<' 

{ after(grammarAccess.getEntityTypeAccess().getLessThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getSupertypeAssignment_3_0_1()); }
(rule__EntityType__SupertypeAssignment_3_0_1)
{ after(grammarAccess.getEntityTypeAccess().getSupertypeAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntityType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3_1__0__Impl
	rule__EntityType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAsKeyword_3_1_0()); }

	'as' 

{ after(grammarAccess.getEntityTypeAccess().getAsKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getEntityKeyword_3_1_1()); }

	'entity' 

{ after(grammarAccess.getEntityTypeAccess().getEntityKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationshipType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__0__Impl
	rule__RelationshipType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAnnotationsAssignment_0()); }
(rule__RelationshipType__AnnotationsAssignment_0)*
{ after(grammarAccess.getRelationshipTypeAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__1__Impl
	rule__RelationshipType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getNameAssignment_1()); }
(rule__RelationshipType__NameAssignment_1)
{ after(grammarAccess.getRelationshipTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__2__Impl
	rule__RelationshipType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAnnotationsAssignment_2()); }
(rule__RelationshipType__AnnotationsAssignment_2)?
{ after(grammarAccess.getRelationshipTypeAccess().getAnnotationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__3__Impl
	rule__RelationshipType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getRelationshipTypeAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__4__Impl
	rule__RelationshipType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getLeftAssignment_4()); }
(rule__RelationshipType__LeftAssignment_4)
{ after(grammarAccess.getRelationshipTypeAccess().getLeftAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__5__Impl
	rule__RelationshipType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAsteriskKeyword_5()); }

	'*' 

{ after(grammarAccess.getRelationshipTypeAccess().getAsteriskKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationshipType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getRightAssignment_6()); }
(rule__RelationshipType__RightAssignment_6)
{ after(grammarAccess.getRelationshipTypeAccess().getRightAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsAssignment_0()); }
(rule__Entity__AnnotationsAssignment_0)*
{ after(grammarAccess.getEntityAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAlternatives_1()); }
(rule__Entity__Alternatives_1)?
{ after(grammarAccess.getEntityAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsAssignment_3()); }
(rule__Entity__AnnotationsAssignment_3)?
{ after(grammarAccess.getEntityAccess().getAnnotationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getEntityAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getTypeAssignment_5()); }
(rule__Entity__TypeAssignment_5)
{ after(grammarAccess.getEntityAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Relationship__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getAnnotationsAssignment_0()); }
(rule__Relationship__AnnotationsAssignment_0)*
{ after(grammarAccess.getRelationshipAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLeftAssignment_1()); }
(rule__Relationship__LeftAssignment_1)
{ after(grammarAccess.getRelationshipAccess().getLeftAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeAssignment_2()); }
(rule__Relationship__TypeAssignment_2)
{ after(grammarAccess.getRelationshipAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getRightAssignment_3()); }
(rule__Relationship__RightAssignment_3)
{ after(grammarAccess.getRelationshipAccess().getRightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionApplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__0__Impl
	rule__FunctionApplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getAnnotationsAssignment_0()); }
(rule__FunctionApplication__AnnotationsAssignment_0)*
{ after(grammarAccess.getFunctionApplicationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__1__Impl
	rule__FunctionApplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getFunctionAssignment_1()); }
(rule__FunctionApplication__FunctionAssignment_1)
{ after(grammarAccess.getFunctionApplicationAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__2__Impl
	rule__FunctionApplication__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionApplicationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__3__Impl
	rule__FunctionApplication__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getInputAssignment_3()); }
(rule__FunctionApplication__InputAssignment_3)
{ after(grammarAccess.getFunctionApplicationAccess().getInputAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__4__Impl
	rule__FunctionApplication__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionApplicationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__5__Impl
	rule__FunctionApplication__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getVerticalLineKeyword_5()); }

	'|' 

{ after(grammarAccess.getFunctionApplicationAccess().getVerticalLineKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__6__Impl
	rule__FunctionApplication__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getFunctionApplicationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionApplication__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionApplication__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getOutputAssignment_7()); }
(rule__FunctionApplication__OutputAssignment_7)
{ after(grammarAccess.getFunctionApplicationAccess().getOutputAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FunctionTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__0__Impl
	rule__FunctionTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionAssignment_0()); }
(rule__FunctionTypeReference__DefinitionAssignment_0)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__1__Impl
	rule__FunctionTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getFunctionTypeReferenceAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__2__Impl
	rule__FunctionTypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDomainAssignment_2()); }
(rule__FunctionTypeReference__DomainAssignment_2)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getDomainAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__3__Impl
	rule__FunctionTypeReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getFunctionTypeReferenceAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__4__Impl
	rule__FunctionTypeReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getCodomainAssignment_4()); }
(rule__FunctionTypeReference__CodomainAssignment_4)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getCodomainAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeReference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getFunctionTypeReferenceAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EntityTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityTypeReference__Group__0__Impl
	rule__EntityTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getDefinitionAssignment_0()); }
(rule__EntityTypeReference__DefinitionAssignment_0)
{ after(grammarAccess.getEntityTypeReferenceAccess().getDefinitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getManyAssignment_1()); }
(rule__EntityTypeReference__ManyAssignment_1)?
{ after(grammarAccess.getEntityTypeReferenceAccess().getManyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QID__Group__0__Impl
	rule__QID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getNAMEParserRuleCall_0()); }
	ruleNAME
{ after(grammarAccess.getQIDAccess().getNAMEParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getGroup_1()); }
(rule__QID__Group_1__0)*
{ after(grammarAccess.getQIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QID__Group_1__0__Impl
	rule__QID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getColonColonKeyword_1_0()); }

	'::' 

{ after(grammarAccess.getQIDAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQIDAccess().getNAMEParserRuleCall_1_1()); }
	ruleNAME
{ after(grammarAccess.getQIDAccess().getNAMEParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group__0__Impl
	rule__NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getIDParserRuleCall_0()); }
	ruleID
{ after(grammarAccess.getNAMEAccess().getIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getGroup_1()); }
(rule__NAME__Group_1__0)*
{ after(grammarAccess.getNAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_1__0__Impl
	rule__NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNAMEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NAME__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNAMEAccess().getIDParserRuleCall_1_1()); }
	ruleID
{ after(grammarAccess.getNAMEAccess().getIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Megamodel__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getMegamodelAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getNameQIDParserRuleCall_2_0()); }
	ruleQID{ after(grammarAccess.getMegamodelAccess().getNameQIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__ImportsAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getImportsMegamodelCrossReference_3_0_1_0()); }
(
{ before(grammarAccess.getMegamodelAccess().getImportsMegamodelQIDParserRuleCall_3_0_1_0_1()); }
	ruleQID{ after(grammarAccess.getMegamodelAccess().getImportsMegamodelQIDParserRuleCall_3_0_1_0_1()); }
)
{ after(grammarAccess.getMegamodelAccess().getImportsMegamodelCrossReference_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__DeclarationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getDeclarationsDeclarationParserRuleCall_3_1_0()); }
	ruleDeclaration{ after(grammarAccess.getMegamodelAccess().getDeclarationsDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Megamodel__BindingsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegamodelAccess().getBindingsLinkParserRuleCall_3_2_0()); }
	ruleLink{ after(grammarAccess.getMegamodelAccess().getBindingsLinkParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getKeyQIDParserRuleCall_1_0()); }
	ruleQID{ after(grammarAccess.getPrefixAnnotationAccess().getKeyQIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAnnotationAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPrefixAnnotationAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShowNameAnnotation__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShowNameAnnotationAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getShowNameAnnotationAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getLinkAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinkAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getLinkAccess().getLinkEntityQIDParserRuleCall_1_0_1()); }
	ruleQID{ after(grammarAccess.getLinkAccess().getLinkEntityQIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getLinkAccess().getLinkEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__InputAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getInputEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getLinkAccess().getInputEntityQIDParserRuleCall_2_1_0_1()); }
	ruleQID{ after(grammarAccess.getLinkAccess().getInputEntityQIDParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getLinkAccess().getInputEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__OutputAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getOutputEntityCrossReference_2_5_0()); }
(
{ before(grammarAccess.getLinkAccess().getOutputEntityQIDParserRuleCall_2_5_0_1()); }
	ruleQID{ after(grammarAccess.getLinkAccess().getOutputEntityQIDParserRuleCall_2_5_0_1()); }
)
{ after(grammarAccess.getLinkAccess().getOutputEntityCrossReference_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__ToAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getToSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getLinkAccess().getToSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getEntityTypeAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getNameQIDParserRuleCall_1_0()); }
	ruleQID{ after(grammarAccess.getEntityTypeAccess().getNameQIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__AnnotationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAnnotationsShowNameAnnotationParserRuleCall_2_0()); }
	ruleShowNameAnnotation{ after(grammarAccess.getEntityTypeAccess().getAnnotationsShowNameAnnotationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__SupertypeAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getSupertypeTypeReferenceParserRuleCall_3_0_1_0()); }
	ruleTypeReference{ after(grammarAccess.getEntityTypeAccess().getSupertypeTypeReferenceParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getRelationshipTypeAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getNameQIDParserRuleCall_1_0()); }
	ruleQID{ after(grammarAccess.getRelationshipTypeAccess().getNameQIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__AnnotationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAnnotationsShowNameAnnotationParserRuleCall_2_0()); }
	ruleShowNameAnnotation{ after(grammarAccess.getRelationshipTypeAccess().getAnnotationsShowNameAnnotationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__LeftAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getLeftTypeReferenceParserRuleCall_4_0()); }
	ruleTypeReference{ after(grammarAccess.getRelationshipTypeAccess().getLeftTypeReferenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__RightAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getRightTypeReferenceParserRuleCall_6_0()); }
	ruleTypeReference{ after(grammarAccess.getRelationshipTypeAccess().getRightTypeReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getEntityAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__DependentAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDependentQuestionMarkKeyword_1_0_0()); }
(
{ before(grammarAccess.getEntityAccess().getDependentQuestionMarkKeyword_1_0_0()); }

	'?' 

{ after(grammarAccess.getEntityAccess().getDependentQuestionMarkKeyword_1_0_0()); }
)

{ after(grammarAccess.getEntityAccess().getDependentQuestionMarkKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ParameterAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getParameterExclamationMarkKeyword_1_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getParameterExclamationMarkKeyword_1_1_0()); }

	'!' 

{ after(grammarAccess.getEntityAccess().getParameterExclamationMarkKeyword_1_1_0()); }
)

{ after(grammarAccess.getEntityAccess().getParameterExclamationMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameQIDParserRuleCall_2_0()); }
	ruleQID{ after(grammarAccess.getEntityAccess().getNameQIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AnnotationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsShowNameAnnotationParserRuleCall_3_0()); }
	ruleShowNameAnnotation{ after(grammarAccess.getEntityAccess().getAnnotationsShowNameAnnotationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getTypeTypeReferenceParserRuleCall_5_0()); }
	ruleTypeReference{ after(grammarAccess.getEntityAccess().getTypeTypeReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getRelationshipAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__LeftAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLeftEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getLeftEntityQIDParserRuleCall_1_0_1()); }
	ruleQID{ after(grammarAccess.getRelationshipAccess().getLeftEntityQIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getLeftEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeQIDParserRuleCall_2_0_1()); }
	ruleQID{ after(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeQIDParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__RightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getRightEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getRightEntityQIDParserRuleCall_3_0_1()); }
	ruleQID{ after(grammarAccess.getRelationshipAccess().getRightEntityQIDParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getRightEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
	rulePrefixAnnotation{ after(grammarAccess.getFunctionApplicationAccess().getAnnotationsPrefixAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getFunctionEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getFunctionApplicationAccess().getFunctionEntityQIDParserRuleCall_1_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionApplicationAccess().getFunctionEntityQIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFunctionApplicationAccess().getFunctionEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__InputAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getInputEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getFunctionApplicationAccess().getInputEntityQIDParserRuleCall_3_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionApplicationAccess().getInputEntityQIDParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getFunctionApplicationAccess().getInputEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionApplication__OutputAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionApplicationAccess().getOutputEntityCrossReference_7_0()); }
(
{ before(grammarAccess.getFunctionApplicationAccess().getOutputEntityQIDParserRuleCall_7_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionApplicationAccess().getOutputEntityQIDParserRuleCall_7_0_1()); }
)
{ after(grammarAccess.getFunctionApplicationAccess().getOutputEntityCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__DefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionEntityTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionEntityTypeQIDParserRuleCall_0_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionEntityTypeQIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getDefinitionEntityTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__DomainAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDomainEntityCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getDomainEntityQIDParserRuleCall_2_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionTypeReferenceAccess().getDomainEntityQIDParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getDomainEntityCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeReference__CodomainAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getCodomainEntityCrossReference_4_0()); }
(
{ before(grammarAccess.getFunctionTypeReferenceAccess().getCodomainEntityQIDParserRuleCall_4_0_1()); }
	ruleQID{ after(grammarAccess.getFunctionTypeReferenceAccess().getCodomainEntityQIDParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getFunctionTypeReferenceAccess().getCodomainEntityCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeReference__DefinitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getDefinitionEntityTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getDefinitionEntityTypeQIDParserRuleCall_0_0_1()); }
	ruleQID{ after(grammarAccess.getEntityTypeReferenceAccess().getDefinitionEntityTypeQIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEntityTypeReferenceAccess().getDefinitionEntityTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeReference__ManyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getManyPlusSignKeyword_1_0()); }
(
{ before(grammarAccess.getEntityTypeReferenceAccess().getManyPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getEntityTypeReferenceAccess().getManyPlusSignKeyword_1_0()); }
)

{ after(grammarAccess.getEntityTypeReferenceAccess().getManyPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UCID : '^'? ('A'..'Z'|'0'..'9') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LCID : '^'? ('a'..'z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

fragment RULE_SEGMENT : ('A'..'Z'|'a'..'z'|'0'..'9'|'-'|'.'|'_'|'~'|':'|'?'|'#'|'['|']'|'@'|'!'|'$'|'&'|'\''|'('|')'|'*'|'+'|','|';'|'=')+;


